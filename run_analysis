#!/usr/bin/env bash

exec &> >(tee analysis.log)

##[[ -f ./job.env ]] && source job.env || { echo "job.env not found"; exit 1; }
source /software/alice/O2OpenAccess/enable
export ALICEO2_CCDB_NOTOKENCHECK="1"

##############################
#   ANALYSIS CONFIGURABLES
##############################

CCDB_URL="http://issaf.spacescience.ro:10080"
CCDB="--ccdb-url ${CCDB_URL}"

JSON="--configuration json://$(realpath config.json)"

# These will implement per task flags for each case
# set to anything to enable, set to empty to disable

# event-selection need to know if MC
IS_MC=""

# add a bunch of qa tasks
DO_QA=""

# instead of run do a json dump of all configurables in the added tasks
DO_DUMP_JSON=""

##############################
[[ -n "${IS_MC}" ]] && SELECT_MC="--isMC"

PROC_RUN="--processRun2";
SET_RUN=""; 

[[ -n "${DO_QA}" ]] && QA_TASKS="o2-analysis-trackqa ${CCDB} -b ${JSON}| o2-analysis-centrality-qa  ${CCDB} -b ${JSON}| o2-analysis-pid-tpc-qa ${CCDB} -b ${JSON}| o2-analysis-pid-tof-qa ${CCDB} -b ${JSON}"

# poate genera probleme
#o2-analysis-multiplicity-qa -b
[[ -n ${DO_DUMP_JSON} ]] && RUN_ACTION="--dump-workflow --dump-workflow-file=flow.json" || RUN_ACTION="--run"

############################

# Input argument : if not set default list of files named file.list is used
INPUT=${1:-@file.list}

# check if basic command is present
hash o2-analysis-timestamp 2>/dev/null || { echo >&2 "O2 environment/commands not found"; exit 1; }

Tstart=$(date "+%s.%N")

echo -e "Analysis running with:\nPROC_RUN=${PROC_RUN}\tSET_RUN=${SET_RUN}\tSELECT_MC=${SELECT_MC}\tJSON=${JSON}"

echo | \
o2-analysis-timestamp                 -b ${CCDB} ${JSON} --aod-file ${INPUT}      | \
o2-analysis-bc-converter              -b ${CCDB} ${JSON}                          | \
o2-analysis-collision-converter       -b ${CCDB} ${JSON}                          | \
o2-analysis-zdc-converter             -b ${CCDB} ${JSON}                          | \
o2-analysis-event-selection           -b ${CCDB} ${JSON} ${PROC_RUN} ${SELECT_MC} | \
o2-analysis-trackextension            -b ${CCDB} ${JSON} ${PROC_RUN}              | \
o2-analysis-tracks-extra-converter    -b ${CCDB} ${JSON} ${PROC_RUN}              | \
o2-analysis-trackselection            -b ${CCDB} ${JSON} ${SET_RUN}               | \
o2-analysis-multiplicity-table        -b ${CCDB} ${JSON} ${PROC_RUN}              | \
o2-analysis-centrality-table          -b ${CCDB} ${JSON} ${PROC_RUN}              | \
o2-opendata-flow1                     -b ${CCDB} ${JSON} ${RUN_ACTION}

#${QA_TASKS}                                                          | \
#o2-analysis-fdd-converter ${JSON} -b                                 | \
#o2-analysistutorial-histograms ${JSON} -b ${RUN_ACTION}

Tend=$(date "+%s.%N")
timed=$(echo "$Tend-$Tstart" | bc -l)
echo "Elapsed: ${timed} s"

